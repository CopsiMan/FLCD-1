N{program^declaration^type1^arraydecl^type^cmpdstmt^stmtlist^stmt^simplestmt^assignstmt^expression^operation^term^iostmt^structstmt^ifstmt^whilestmt^condition^relation}
E{begin^end^;^int^char^[^]^=^(^)^+^-^*^/^%^input^print^if^else^while^<^<=^!=^>=^>^"^identifier^constant}
S{program}
P{program->begin declaration stmtlist end^declaration->type identifier ;^type1->int|char^arraydecl->type1 [ ]^type->type1|arraydecl^cmpdstmt->begin stmtlist end^stmtlist->stmt|stmt ; stmtlist^stmt->declaration|simplestmt|structstmt^simplestmt->assignstmt|iostmt^assignstmt->identifier = expression ;^expression->term|expression operation expression|( expression operation expression )^operation->+|-|*|/|%^term->identifier|constant^iostmt->input ( identifier ) ;|print ( identifier ) ;|print ( constant ) ;^structstmt->ifstmt|whilestmt^ifstmt->if ( condition ) cmpdstmt|if ( condition ) cmpdstmt else cmpdstmt^whilestmt->while ( condition ) cmpdstmt^condition->expression relation expression^relation-><|<=|=|!=|>=|>}
